{"ast":null,"code":"var _jsxFileName = \"/Users/alenooshhambarchian/Desktop/CSE110_LAB4/client/src/components/Expense/AddExpenseForm.tsx\",\n  _s = $RefreshSig$();\nimport { createExpense } from \"../../utils/expense-utils\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddExpenseForm = () => {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  const [cost, setCost] = useState(\"\"); // Define cost as a string for form input compatibility\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent the default form submission behavior\n\n    try {\n      // Parse cost to a number\n      const expenseCost = parseFloat(cost);\n      if (isNaN(expenseCost)) {\n        console.error(\"Invalid cost value\");\n        return; // Exit if the cost is not a valid number\n      }\n\n      // Define the newExpense object with necessary properties\n      const newExpense = {\n        id: crypto.randomUUID(),\n        description,\n        cost: expenseCost\n      };\n\n      // Call the createExpense function to add the expense\n      await createExpense(newExpense);\n\n      // Reset the form fields after adding the expense\n      setDescription(\"\");\n      setCost(\"\");\n\n      // You can also update your UI state or context here if needed\n    } catch (error) {\n      console.error(\"Error adding expense:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter description\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cost,\n        onChange: e => setCost(e.target.value),\n        placeholder: \"Enter cost\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(AddExpenseForm, \"sl3Kx5BKQGp7XE/k9/ZLXNyEFf0=\");\n_c = AddExpenseForm;\nexport default AddExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"AddExpenseForm\");","map":{"version":3,"names":["createExpense","useState","jsxDEV","_jsxDEV","AddExpenseForm","_s","description","setDescription","cost","setCost","handleSubmit","event","preventDefault","expenseCost","parseFloat","isNaN","console","error","newExpense","id","crypto","randomUUID","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/alenooshhambarchian/Desktop/CSE110_LAB4/client/src/components/Expense/AddExpenseForm.tsx"],"sourcesContent":["import { createExpense } from \"../../utils/expense-utils\";\nimport { Expense } from \"../../types/types\";\nimport { useState } from \"react\";\n\nconst AddExpenseForm = () => {\n    const [description, setDescription] = useState<string>(\"\");\n    const [cost, setCost] = useState<string>(\"\"); // Define cost as a string for form input compatibility\n\n    const handleSubmit = async (event: React.FormEvent) => {\n        event.preventDefault(); // Prevent the default form submission behavior\n\n        try {\n            // Parse cost to a number\n            const expenseCost = parseFloat(cost);\n            if (isNaN(expenseCost)) {\n                console.error(\"Invalid cost value\");\n                return; // Exit if the cost is not a valid number\n            }\n\n            // Define the newExpense object with necessary properties\n            const newExpense: Expense = {\n                id: crypto.randomUUID(),\n                description,\n                cost: expenseCost,\n            };\n\n            // Call the createExpense function to add the expense\n            await createExpense(newExpense);\n\n            // Reset the form fields after adding the expense\n            setDescription(\"\");\n            setCost(\"\");\n\n            // You can also update your UI state or context here if needed\n        } catch (error) {\n            console.error(\"Error adding expense:\", error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Description</label>\n                <input\n                    type=\"text\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Enter description\"\n                    required\n                />\n            </div>\n            <div>\n                <label>Cost</label>\n                <input\n                    type=\"text\"\n                    value={cost}\n                    onChange={(e) => setCost(e.target.value)}\n                    placeholder=\"Enter cost\"\n                    required\n                />\n            </div>\n            <button type=\"submit\">Add Expense</button>\n        </form>\n    );\n};\n\nexport default AddExpenseForm;\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;;EAE9C,MAAMS,YAAY,GAAG,MAAOC,KAAsB,IAAK;IACnDA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAExB,IAAI;MACA;MACA,MAAMC,WAAW,GAAGC,UAAU,CAACN,IAAI,CAAC;MACpC,IAAIO,KAAK,CAACF,WAAW,CAAC,EAAE;QACpBG,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;QACnC,OAAO,CAAC;MACZ;;MAEA;MACA,MAAMC,UAAmB,GAAG;QACxBC,EAAE,EAAEC,MAAM,CAACC,UAAU,CAAC,CAAC;QACvBf,WAAW;QACXE,IAAI,EAAEK;MACV,CAAC;;MAED;MACA,MAAMb,aAAa,CAACkB,UAAU,CAAC;;MAE/B;MACAX,cAAc,CAAC,EAAE,CAAC;MAClBE,OAAO,CAAC,EAAE,CAAC;;MAEX;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACId,OAAA;IAAMmB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBACzBpB,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAAoB,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BxB,OAAA;QACIyB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEvB,WAAY;QACnBwB,QAAQ,EAAGC,CAAC,IAAKxB,cAAc,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAChDI,WAAW,EAAC,mBAAmB;QAC/BC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNxB,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAAoB,QAAA,EAAO;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBxB,OAAA;QACIyB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,IAAK;QACZsB,QAAQ,EAAGC,CAAC,IAAKtB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACzCI,WAAW,EAAC,YAAY;QACxBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNxB,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf,CAAC;AAACtB,EAAA,CA5DID,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AA8DpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}